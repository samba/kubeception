---
kind: Namespace
apiVersion: v1
metadata:
  name: kubeception
  labels:
    name: kubeception


---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: etcd-pv-volume
  labels:
    type: local
spec:
  storageClassName: standard
  capacity: 
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/var/data"
    type: DirectoryOrCreate

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: etcd-pv-claim
  namespace: kubeception
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: kubeception-etcd
  namespace: kubeception
spec:
  replicas: 1
  selector: 
    matchLabels:
      role.kubeception: etcd
  template:
      metadata:
        namespace: kubeception
        name: kubeception-etcd0
        labels: 
          component: etcd
          tier: control-plane
          role.kubeception: etcd
      spec:
        containers:
          - name: kubeception-etcd
            image: k8s.gcr.io/etcd-amd64:3.1.10
            command: 
              - etcd
              - --debug
              - --name=etcd0
              - --data-dir=/var/lib/etcd
              - --client-cert-auth
              - --cert-file=/opt/etcd/certs/server/server.crt
              - --key-file=/opt/etcd/certs/server/server.key
              - --trusted-ca-file=/opt/etcd/certs/server/ca.crt
              - --listen-client-urls=https://0.0.0.0:2379
              - --advertise-client-urls=https://$(SERVICE_NAME):2379
            env:
              - name: ETCD_DEBUG
                value: "1"
              - name: SERVICE_NAME
                value: kubeception-etcd
            volumeMounts:
              - mountPath: /var/lib/etcd/
                name: etcd-pv-claim
              - mountPath: /opt/etcd/scripts
                name: etcd-util-scripts
              - mountPath: /opt/etcd/certs/server
                name: etcdserver-certs
            ports: 
            - name: clientport
              containerPort: 2379
              protocol: TCP
            - name: serviceport
              containerPort: 4001
              protocol: TCP
            livenessProbe:
              exec:
                command: ['sh', '/opt/etcd/scripts/localhealth.sh']
              initialDelaySeconds: 15
              timeoutSeconds: 15
        volumes:
          - name: etcd-pv-claim
            persistentVolumeClaim:
              claimName: etcd-pv-claim
          - name: etcd-util-scripts
            configMap:
              name: etcd-util-scripts
          - name: etcdserver-certs
            secret:
              secretName: etcdserver.kubeception


---
kind: Service
apiVersion: v1
metadata:
  name: kubeception-etcd
  namespace: kubeception
spec:
  selector:
    role.kubeception: etcd
  ports:
  - protocol: TCP
    port: 2379
    targetPort: 2379

---
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: kubeception
  name: etcd-util-scripts
data:
  localhealth.sh: |
    #!/bin/sh
    etcdctl cluster-health | grep healthy


  
